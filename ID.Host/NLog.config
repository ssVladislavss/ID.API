<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off">

	<variable name="logDirectory" value="${basedir}/logs/${shortdate}" />

	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<!--<add assembly="NLog.MailKit"/>-->
		<!--<add assembly="Npgsql.EntityFrameworkCore.PostgreSQL"/>-->
		<!--<add assembly="Microsoft.EntityFrameworkCore.Sqlite.Core"/>-->
	</extensions>


	<targets>
		<!--Можно разделять по файлам-->
		   
    <target xsi:type="File" name="fileLogTrace" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
    <target xsi:type="File" name="fileLogDebug" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
    <target xsi:type="File" name="fileLogInfo" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
    <target xsi:type="File" name="fileLogWarn" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
    <target xsi:type="File" name="fileLogErrors" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
    <target xsi:type="File" name="fileLogFatal" fileName="${logDirectory}/${level}.log" deleteOldFileOnStartup="false" concurrentWrites="true" />
	<target xsi:type="Console" name="logconsole" layout="${level:uppercase=true} ${logger}: ${message}. ${exception:format=ToString}" error="true" />

	</targets>

	<rules>
		<!--Можно разделять по файлам-->
	<logger name="*" minlevel="Trace" writeTo="logconsole" />
	<logger name="*" level="Trace" writeTo="fileLogTrace" />
    <logger name="*" level="Debug" writeTo="fileLogDebug" />
    <logger name="*" level="Info" writeTo="fileLogInfo" />
    <logger name="*" level="Warn" writeTo="fileLogWarn" />
    <logger name="*" level="Error" writeTo="fileLogErrors" />
    <logger name="*" level="Fatal" writeTo="fileLogFatal" />

		<!--На почту-->
		<!--<logger name="*" level="Error" writeTo="mail" />-->

		<!--В один файл-->
		<!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->
		<!--В один PostgreSQL-->
		<!--<logger name="*" minlevel="Trace" writeTo="postgresql"/>-->
		<!--В SQLite-->
		<!--<logger name="*" minlevel="Trace" writeTo="sqlite"/>-->

		<!--В Порт-->
		<!--<logger name="*" minlevel="Trace" writeTo="TcpOutlet">-->
			<!--<filters>
        <when condition="contains(logger, 'что-то')" action="Log" />
        <when condition="contains(logger, 'что-то')" action="Ignore" />
      </filters>-->
		<!--</logger>-->

	</rules>

</nlog>